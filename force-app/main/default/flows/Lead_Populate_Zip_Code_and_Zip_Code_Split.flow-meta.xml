<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <decisions>
        <name>Does_Zip_Code_Exist</name>
        <label>Does Zip Code Exist</label>
        <locationX>314</locationX>
        <locationY>395</locationY>
        <defaultConnector>
            <targetReference>Which_field_is_populated</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Zip_Code</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Populate_Zip_Code_and_Zip_Code_Split</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Which_field_is_populated</name>
        <label>Which field is populated</label>
        <locationX>578</locationX>
        <locationY>503</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Country</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country_Drop_Down__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varIsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Populate_the_Country_Drop_Down_Field</targetReference>
            </connector>
            <label>Country</label>
        </rules>
        <rules>
            <name>Country_Drop_Down</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Country_Drop_Down__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varIsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Populate_the_Country_Field</targetReference>
            </connector>
            <label>Country Drop Down</label>
        </rules>
    </decisions>
    <description>Modified to update the zip code when the lead is created or the postal is updated.</description>
    <environments>Default</environments>
    <formulas>
        <name>varIsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>varZipCodeFormula</name>
        <dataType>String</dataType>
        <expression>LEFT(SUBSTITUTE({!$Record.PostalCode}, &quot; &quot;, &quot;&quot;),5)</expression>
    </formulas>
    <formulas>
        <name>varZipCodeSplitFormula</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK(TEXT({!Get_Zip_Code.Zip_Code_Split__c}))), TEXT({!Get_Zip_Code.Zip_Code_Split__c}) , &apos;Null&apos;)</expression>
    </formulas>
    <interviewLabel>Lead - Populate Zip Code and Zip Code Split {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Lead - Populate Zip Code and Zip Code Split</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Zip_Code</name>
        <label>Get Zip Code</label>
        <locationX>314</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_Zip_Code_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varZipCodeFormula</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Zip_Code__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Populate_the_Country_Drop_Down_Field</name>
        <label>Populate the Country Drop Down Field</label>
        <locationX>314</locationX>
        <locationY>611</locationY>
        <inputAssignments>
            <field>Country_Drop_Down__c</field>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Populate_the_Country_Field</name>
        <label>Populate the Country Field</label>
        <locationX>578</locationX>
        <locationY>611</locationY>
        <inputAssignments>
            <field>Country</field>
            <value>
                <elementReference>$Record.Country_Drop_Down__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Populate_Zip_Code_and_Zip_Code_Split</name>
        <label>Populate Zip Code and Zip Code Split</label>
        <locationX>50</locationX>
        <locationY>503</locationY>
        <inputAssignments>
            <field>Country</field>
            <value>
                <stringValue>United States</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Country_Drop_Down__c</field>
            <value>
                <stringValue>United States</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>State</field>
            <value>
                <elementReference>Get_Zip_Code.State__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Zip_Code_Split__c</field>
            <value>
                <elementReference>varZipCodeSplitFormula</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Zip_Code__c</field>
            <value>
                <elementReference>Get_Zip_Code.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Zip_Code</targetReference>
        </connector>
        <filterFormula>OR( ISNEW(), ISCHANGED({!$Record.PostalCode}))</filterFormula>
        <object>Lead</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <triggerOrder>1100</triggerOrder>
</Flow>
